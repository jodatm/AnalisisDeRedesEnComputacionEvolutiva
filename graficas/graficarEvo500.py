# -*- coding: utf-8 -*-
"""
Created on Wed Dec  2 10:11:49 2020

@author: User
"""


# -*- coding: utf-8 -*-
"""
Created on Wed Dec  2 13:33:46 2020

@author: User
"""


#!/usr/bin/python
# -*- coding: utf-8 -*- 
from mpl_toolkits.mplot3d import Axes3D 
import matplotlib.pyplot as plt
from matplotlib import cm
from matplotlib.ticker import LinearLocator, FormatStrFormatter
import numpy as np
#plt.rc('xtick',labelsize=6)
#	plt.rc('ytick',labelsize=6)


#Caso SWHD
#Iteracion
x = np.array(np.arange(0,100))
#Fitness
z = np.array([0.00140744,0.00633409,0.01125232,0.01617117,0.02101828,0.02598487,
0.03092925,0.035878,0.0408362,0.04583155,0.05080933,0.05581362,
0.06080031,0.06575948,0.07069553,0.07574401,0.08070729,0.08583445,
0.09088895,0.09593094,0.10096956,0.10609402,0.11130079,0.11646668,
0.12159283,0.12665952,0.13182503,0.13709099,0.14224793,0.14734493,
0.1525113,0.15763813,0.16276485,0.16781671,0.17296236,0.17804137,
0.18310694,0.1882048,0.19339239,0.19864463,0.20383054,0.20902906,
0.21421448,0.21947265,0.22468442,0.22980213,0.23504697,0.24029517,
0.24546535,0.25060158,0.25585616,0.26106221,0.26632951,0.27155542,
0.27677894,0.28201613,0.28716205,0.29242818,0.29762434,0.30287976,
0.30813608,0.31340383,0.31866123,0.32396007,0.32927479,0.33453092,
0.33972901,0.34509687,0.35041101,0.35565842,0.36106442,0.36633833,
0.37160472,0.37692026,0.38219709,0.38757567,0.39284884,0.39821574,
0.40356115,0.40895832,0.41432488,0.41965017,0.42497567,0.43031621,
0.43567417,0.44108209,0.44638634,0.4518069,0.45706815,0.46245338,
0.4679394,0.47330523,0.47869177,0.48410697,0.48961298,0.49497813,
0.50039651,0.50586201,0.5111971,0.51671645])
#Tiempo
y = np.array([106.19,130.49,143.53,155.41,168.95,175.35,187.85,203.12,213.63,222.27,224.34,233.8,244.5,247.74,256.47,264.61,280.57,285.75,285.58,296.81,308.66,314.89,319.12,325.0,333.71,344.87,342.83,353.26,353.2,360.87,372.36,375.56,381.21,383.34,389.47,395.31,408.48,409.39,415.96,422.22,426.41,432.86,438.49,443.63,454.15,458.82,457.23,465.25,472.15,470.02,474.26,489.98,488.7,499.07,496.36,509.16,511.26,510.93,517.95,524.45,527.43,531.58,539.23,547.17,544.96,544.39,553.21,563.28,570.55,570.16,582.93,587.62,585.95,589.24,597.4,600.21,599.64,611.1,614.61,618.43,625.27,630.48,636.68,634.95,639.88,641.45,653.24,653.23,653.62,666.02,663.97,675.4,668.67,681.59,681.2,685.72,690.98,696.01,695.34,699.6
])

x, y = np.meshgrid(x, y)		
#z = z.reshape(x.shape)

finalZ = []

for i in range(0,100):
	finalZ.append(z)
	


fig = plt.figure()

#ax = fig.add_subplot(2, 2, 1, projection='3d')
ax = fig.add_subplot(111, projection='3d')

surf = ax.plot_surface(x, y, np.array(finalZ), cmap=cm.coolwarm,
                       linewidth=0, antialiased=True, label="Evolutive")


plt.xlabel(u"Iteration", fontsize=7)
plt.ylabel(u"Fitness", fontsize=7)                       
#fig.colorbar(surf, shrink=1,orientation='horizontal', aspect=20)
ax.zaxis.set_major_locator(LinearLocator(10))
ax.zaxis.set_major_formatter(FormatStrFormatter('%.02f'))
ax.set_title(u'Evolutive strategy 500', fontsize=8)
ax.view_init(azim=-90, elev=45)

plt.savefig("evo500.png")
