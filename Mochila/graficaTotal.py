#!/usr/bin/python
# -*- coding: utf-8 -*- 
from mpl_toolkits.mplot3d import Axes3D 
import matplotlib.pyplot as plt
from matplotlib import cm
from matplotlib.ticker import LinearLocator, FormatStrFormatter
import numpy as np
plt.rc('xtick',labelsize=6)
plt.rc('ytick',labelsize=6)


#Evolutivo 50
#Iteracion
x = np.arange(1,101)

#Fitness
z = np.array([963,965,968,970,973,975,979,983,986,990,994,997,999,1003,1005,1008,1011,1013,1017,1020,1022,1024,1027,1029,1030,1033,1036,1038,1041,1043,1048,1051,1052,1053,1056,1058,1060,1062,1063,1064,1068,1069,1071,1074,1076,1079,1083,1084,1086,1087,1088,1091,1093,1095,1096,1098,1100,1102,1103,1105,1107,1109,1111,1112,1115,1116,1116,1118,1118,1119,1121,1122,1123,1124,1126,1127,1129,1129,1132,1133,1134,1134,1135,1135,1138,1139,1140,1141,1142,1143,1145,1146,1147,1148,1150,1151,1153,1155,1156,1157])

#Tiempo
y = np.array([0.00122722,0.00283423,0.00443686,0.00603693,0.00763882,0.00924391
,0.01085567,0.01246648,0.01409345,0.01572016,0.01733957,0.01896019
,0.02058152,0.02221083,0.02383696,0.025459,0.02707778,0.02869338
,0.03032086,0.03194391,0.03355979,0.03518474,0.03681223,0.03843643
,0.0400619,0.04168607,0.04331251,0.04494622,0.04657898,0.04821183
,0.04984046,0.05147112,0.05310077,0.05472965,0.05635802,0.05799685
,0.05964273,0.06128808,0.06292367,0.06456774,0.06621126,0.06786096
,0.0695,0.07114537,0.07278742,0.07444065,0.07607465,0.07771122
,0.07935017,0.08100061,0.08264303,0.08429225,0.08593584,0.08758238
,0.0892268,0.09086993,0.09251175,0.09416462,0.09581278,0.09746399
,0.09911907,0.100773,0.10243462,0.10408819,0.10573751,0.10739578
,0.10904895,0.11070114,0.11236381,0.11402556,0.11567833,0.11733832
,0.11899208,0.1206518,0.12230967,0.12396247,0.12562184,0.1272916
,0.12895548,0.13061982,0.13228024,0.13394009,0.1356004,0.1372565
,0.13891546,0.14056969,0.14224234,0.14391321,0.1455856,0.14726817
,0.1489447,0.15060345,0.15226408,0.15392208,0.15557801,0.15724124
,0.15890581,0.16057264,0.16224236,0.16391285])
x, y = np.meshgrid(x, y)

z = z.reshape(1,100)

#Size figure 16 width x 8 height
fig = plt.figure(figsize=(8,8))

ax = fig.add_subplot(2, 2, 1, projection='3d')


surf = ax.plot_surface(x, y, z, cmap=cm.coolwarm,
                       linewidth=0, antialiased=True, label="Evolutive 50")
                       
#fig.colorbar(surf, shrink=0.5, aspect=5)
#ax.zaxis.set_major_locator(LinearLocator(10))
ax.zaxis.set_major_formatter(FormatStrFormatter('%d'))
ax.tick_params(labelsize=10)
ax.set_title(u'a) Evolutive 50', fontsize=11, y=-0.2)
ax.set_xlabel(u"Iteration", fontsize=10)
ax.set_ylabel(u"\nTime", fontsize=10)
ax.set_zlabel(u"\n\nFitness", fontsize=10)

#Evolutivo 500
x = np.arange(1,101)

y = np.array([0.11768182,0.1359157,0.15438643,0.17324412,0.19193708,0.21076791
,0.22976464,0.24880228,0.26787385,0.28712173,0.30640294,0.32583899
,0.34538831,0.36482893,0.3844682,0.40409959,0.42387578,0.44394121
,0.46385604,0.48381305,0.50392382,0.52419425,0.54428106,0.56449983
,0.58486255,0.60535561,0.62572638,0.64617404,0.66666753,0.68728222
,0.70803259,0.728777,0.74938935,0.77029367,0.79105709,0.81190954
,0.83283339,0.85375144,0.87479995,0.89587832,0.91690953,0.9378863
,0.95896266,0.98017931,1.00130027,1.02238327,1.04349348,1.06484862
,1.0861817,1.10758519,1.12880188,1.15004428,1.17131321,1.19262967
,1.21391004,1.23531587,1.25666709,1.27823951,1.29984414,1.32122307
,1.34272573,1.36417567,1.3856213,1.40700545,1.42833307,1.4499314
,1.47162642,1.49346794,1.51514785,1.53660844,1.55825046,1.57989365
,1.6014284,1.62285022,1.64441191,1.66609959,1.68788857,1.70950403
,1.73104051,1.75269475,1.77439751,1.79595389,1.81756013,1.83924991
,1.86091339,1.88264544,1.90430641,1.92603358,1.9478902,1.96977443
,1.99170511,2.01354296,2.03520222,2.05714043])

z = np.array([92,169,214,252,287,321,352,384,415,449,477,506,537,563,588,616,643,668,694,716,743,765,789,815,841,861,882,905,928,947,968,989,1009,1024,1046,1061,1078,1093,1109,1126,1139,1150,1163,1173,1183,1197,1208,1217,1225,1236,1242,1249,1257,1265,1272,1276,1283,1288,1294,1301,1305,1310,1313,1318,1323,1327,1331,1334,1337,1340,1343,1346,1351,1353,1356,1358,1361,1365,1366,1369,1372,1375,1377,1379,1381,1383,1386,1387,1389,1392,1393,1396,1398,1400,1403,1406,1407,1408,1410,1412])

x, y = np.meshgrid(x, y)
z = z.reshape(1,100)

ax = fig.add_subplot(2, 2, 2, projection='3d')

surf2= ax.plot_surface(x, y, z, cmap=cm.coolwarm,
                       linewidth=0, antialiased=True, label="Evolutive 500")


ax.set_title(u'Evolutive 500', fontsize=8)

# Customize the z axis.
#ax.set_zlim(-1.01, 1.01)
#ax.zaxis.set_major_locator(LinearLocator(10))
ax.zaxis.set_major_formatter(FormatStrFormatter('%d'))

ax.set_xlabel(u"Iteration", fontsize=10)
ax.set_ylabel(u"\nTime", fontsize=10)
ax.set_zlabel(u"\n\nFitness", fontsize=10)
ax.set_title(u'b) Evolutive 500', fontsize=11, y=-0.2)
ax.tick_params(labelsize=10)
# Add a color bar which maps values to colors.
#fig.colorbar(surf2, shrink=0.5, aspect=5)


#Size 1000

#Caso Best 50
#Iteracion
x = np.arange(1,101)
#Fitness
z = np.array

#Tiempo
y = np.array([ 1.77121401e-03,2.20912695e-03,2.64588356e-03,3.08203936e-03
,3.51579189e-03,3.95104885e-03,4.38623667e-03,4.82018709e-03
,5.25542259e-03,5.69030046e-03,6.12339258e-03,6.55798197e-03
,6.99219227e-03,7.42607117e-03,7.85977840e-03,8.29376936e-03
,8.72992039e-03,9.16584730e-03,9.59987402e-03,1.00355268e-02
,1.04715157e-02,1.09083962e-02,1.13464665e-02,1.17825699e-02
,1.22176313e-02,1.26556849e-02,1.30976605e-02,1.35395241e-02
,1.39800239e-02,1.44183159e-02,1.48596859e-02,1.53049684e-02
,1.57437754e-02,1.61806202e-02,1.66169524e-02,1.70530462e-02
,1.74858642e-02,1.79189181e-02,1.83524728e-02,1.87870145e-02
,1.92198563e-02,1.96529555e-02,2.00858116e-02,2.05190158e-02
,2.09518218e-02,2.13866472e-02,2.18226051e-02,2.22553396e-02
,2.26874518e-02,2.31195021e-02,2.35513639e-02,2.39851260e-02
,2.44184613e-02,2.48514891e-02,2.52861309e-02,2.57216477e-02
,2.61567569e-02,2.65897226e-02,2.70248151e-02,2.74567580e-02
,2.78897238e-02,2.83283591e-02,2.87672663e-02,2.92057872e-02
,2.96431017e-02,3.00808835e-02,3.05166435e-02,3.09481168e-02
,3.13832283e-02,3.18165421e-02,3.22485852e-02,3.26815844e-02
,3.31136608e-02,3.35463047e-02,3.39796472e-02,3.44126034e-02
,3.48465037e-02,3.52792859e-02,3.57128859e-02,3.61481357e-02
,3.65823340e-02,3.70161796e-02,3.74486160e-02,3.78808713e-02
,3.83131313e-02,3.87552524e-02,3.91915369e-02,3.96279287e-02
,4.00618029e-02,4.04963708e-02,4.09293199e-02,4.13638473e-02
,4.17995143e-02,4.22343040e-02,4.26696229e-02,4.31071806e-02])
x, y = np.meshgrid(x, y)
z = z.reshape(1,100)

ax = fig.add_subplot(2, 2, 3, projection='3d')

surf = ax.plot_surface(x, y, z, cmap=cm.coolwarm,
                       linewidth=0, antialiased=True, label="SWBest 50")

ax.set_xlabel(u"Iteration", fontsize=10)
ax.set_ylabel(u"\nTime", fontsize=10)
ax.set_zlabel(u"\n\nFitness", fontsize=10)                    
#fig.colorbar(surf, shrink=1,orientation='horizontal', aspect=20)
#ax.zaxis.set_major_locator(LinearLocator(10))
ax.zaxis.set_major_formatter(FormatStrFormatter('%d'))
ax.set_title(u'c) Swbest 50', fontsize=11, y=-0.2)
ax.tick_params(labelsize=10)
#Best 500
x = np.arange(1,101)

z = np.array

y = np.array([1.61838531e-05,4.21363592e-03,8.40198755e-03,1.25874329e-02
,1.67753911e-02,2.09313035e-02,2.50890684e-02,2.92530918e-02
,3.34886241e-02,3.76982832e-02,4.18680167e-02,4.60465264e-02
,5.02175403e-02,5.43713069e-02,5.85221100e-02,6.26742172e-02
,6.68287897e-02,7.09922314e-02,7.51675606e-02,7.93573833e-02
,8.35245967e-02,8.77201366e-02,9.18957472e-02,9.60758972e-02
,1.00256641e-01,1.04422774e-01,1.08628547e-01,1.12804394e-01
,1.17016606e-01,1.21220279e-01,1.25400839e-01,1.29566398e-01
,1.33750432e-01,1.37925999e-01,1.42099586e-01,1.46263921e-01
,1.50416710e-01,1.54595408e-01,1.58780003e-01,1.62987113e-01
,1.67203760e-01,1.71422901e-01,1.75614810e-01,1.79772604e-01
,1.83937981e-01,1.88092785e-01,1.92251134e-01,1.96418281e-01
,2.00576003e-01,2.04773369e-01,2.08959348e-01,2.13180220e-01
,2.17373047e-01,2.21543510e-01,2.25708518e-01,2.29881942e-01
,2.34078269e-01,2.38294997e-01,2.42486072e-01,2.46678662e-01
,2.50874288e-01,2.55044575e-01,2.59237876e-01,2.63442333e-01
,2.67660165e-01,2.71890254e-01,2.76074038e-01,2.80228736e-01
,2.84400742e-01,2.88573954e-01,2.92716956e-01,2.96884620e-01
,3.01053274e-01,3.05198491e-01,3.09359713e-01,3.13533785e-01
,3.17715051e-01,3.21909254e-01,3.26087220e-01,3.30250659e-01
,3.34431717e-01,3.38608439e-01,3.42777870e-01,3.46925902e-01
,3.51106617e-01,3.55271199e-01,3.59451072e-01,3.63610041e-01
,3.67773900e-01,3.71950128e-01,3.76111233e-01,3.80279629e-01
,3.84456716e-01,3.88596892e-01,3.92751513e-01,3.96916199e-01
,4.01082909e-01,4.05239580e-01,4.09421115e-01,4.13633153e-01
])

x, y = np.meshgrid(x, y)
z = z.reshape(1,100)
ax = fig.add_subplot(2, 2, 4, projection='3d')

surf2= ax.plot_surface(x, y, z, cmap=cm.coolwarm,
                       linewidth=0, antialiased=True, label="SWBest 500")


# Customize the z axis.
#ax.set_zlim(-1.01, 1.01)
#ax.zaxis.set_major_locator(LinearLocator(10))
ax.zaxis.set_major_formatter(FormatStrFormatter('%d'))

ax.set_xlabel(u"Iteration", fontsize=10)
ax.set_ylabel(u"\nTime", fontsize=10)
ax.set_zlabel(u"\n\nFitness", fontsize=10)
ax.set_title(u'd) Swbest 500', fontsize=11, y=-0.2)
ax.tick_params(labelsize=10)


# Add a color bar which maps values to colors.
#fig.colorbar(surf, shrink=1,orientation='horizontal', aspect=20)




plt.savefig("color.png")
